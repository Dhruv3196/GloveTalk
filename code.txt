#include <SoftwareSerial.h>
SoftwareSerial BTserial(10, 11); // RX | TX
const int FLEX_P = A0;
const int FLEX_R = A1;
const int FLEX_M = A2;
const int FLEX_I = A5;
const int FLEX_T = A4;

int con_p = 6;
int con_state;
// Pin connected to voltage divider output

// Measure the voltage at 5V and the actual resistance of your
// 47k resistor, and enter them below:
const float VCC = 5.0; // Measured voltage of Ardunio 5V line
const float R_DIV = 47500.0; // Measured resistance of 3.3k resistor

// Upload the code, then try to adjust these values to more
// accurately calculate bend degree.
const float STRAIGHT_RESISTANCE = 10000.0; // resistance when straight
//const float BEND_RESISTANCE = 55000.0; // resistance at 90 deg for 10
const float BEND_RESISTANCE =  24000.0; // for 31,32,35,37                (choose)

int flexADC;
float flexV, flexR, angleP, angleR, angleM, angleI, angleT;
float maxI, maxM, maxR, maxP, maxT;
float minI, minM, minR, minP, minT;
float P, R, M, I, T;



void setup() {

  Serial.begin(9600);
  BTserial.begin(9600);
  pinMode(FLEX_P, INPUT);
  pinMode(FLEX_R, INPUT);
  pinMode(FLEX_M, INPUT);
  pinMode(FLEX_I, INPUT);
  pinMode(FLEX_T, INPUT);
  pinMode(3, OUTPUT);   //led pin
  pinMode(6, INPUT); //contact point
  calibrate();
  delay(1000);
   Serial.println("Starting GLOVE");


}

void loop() {
  flexADC = 0;
  angleP = 0.0; flexV = 0.0; flexR = 0.0;
  angleR = 0.0;
  angleM = 0.0;
  angleI = 0.0;
  angleT = 0.0;
  Serial.println("");
  con_state = digitalRead(con_p);
  pinky();
  ring();
  middle();
  index();
  thumb();
  mapfingers();
  printfingers();
  delay(500);
  checkLetter();
}


void calibrate() {
  Serial.println("open your hands maximum");
  delay(3500);
  flexADC = 0;
  angleP = 0.0; flexV = 0.0; flexR = 0.0;
  angleR = 0.0;
  angleM = 0.0;
  angleI = 0.0;
  angleT = 0.0;
  Serial.println("");
  pinky();
  ring();
  middle();
  index();
  thumb();
  maxI = I;
  maxM = M;
  maxR = R;
  maxP = P;
  maxT = T;
   Serial.println("");
  Serial.println( String(maxI) + " " + String(maxM) + " " + String(maxR) + " " + String(maxP) + " " + String(maxT) + " ");
  Serial.println("ABOVE VALUSES WILL BE SET");
  delay(500);
  Serial.println("completly close your hands");
  delay(3500);
  flexADC = 0;
  angleP = 0.0; flexV = 0.0; flexR = 0.0;
  angleR = 0.0;
  angleM = 0.0;
  angleI = 0.0;
  angleT = 0.0;
  Serial.println("");
  pinky();
  ring();
  middle();
  index();
  thumb();
  minI = I;
  minM = M;
  minR = R;
  minP = P;
  minT = T;
   Serial.println("");
  Serial.println( String(minI) + " " + String(minM) + " " + String(minR) + " " + String(minP) + " " + String(minT) + " ");
  Serial.println("ABOVE VALUSES WILL BE SET");
   Serial.println("");
  Serial.println("calibration done");

}
void mapfingers() {
  angleI = map(I, maxT, minI, 0, 90.0);
  angleM = map(M, maxM, minM, 0, 90.0);
  angleR = map(R, maxR, minR, 0, 90.0);
  angleP = map(P, maxP, minP, 0, 90.0);
  angleT = map(T, maxT, minT, 0, 90.0);
}
void pinky() {
  flexADC = analogRead(FLEX_P);
  flexV = flexADC * (VCC / 1023.0);
  flexR = R_DIV * (VCC / flexV - 1.0);

  //Serial.print("Resistance: " + String(flexR) + " ohms" );

  // Use the calculated resistance to estimate the sensor's
  // bend angle:
  P = map(flexR, STRAIGHT_RESISTANCE, BEND_RESISTANCE,
          0, 90.0);
 // Serial.print( "PINKYBend: " + String(P) + " degrees ");


}

void ring() {
  flexADC = analogRead(FLEX_R);
  flexV = flexADC * (VCC / 1023.0);
  flexR = R_DIV * (VCC / flexV - 1.0);

  //Serial.print("Resistance: " + String(flexR) + " ohms" );

  // Use the calculated resistance to estimate the sensor's
  // bend angle:
  R = map(flexR, STRAIGHT_RESISTANCE, BEND_RESISTANCE,
          0, 90.0);
  //Serial.print( " RINGBend: " + String(R) + " degrees ");


}

void middle() {
  flexADC = analogRead(FLEX_M);
  flexV = flexADC * (VCC / 1023.0);
  flexR = R_DIV * (VCC / flexV - 1.0);

  //Serial.print("Resistance: " + String(flexR) + " ohms" );

  // Use the calculated resistance to estimate the sensor's
  // bend angle:
  M = map(flexR, STRAIGHT_RESISTANCE, BEND_RESISTANCE,
          0, 90.0);
 // Serial.print( " MIDDLEBend: " + String(M) + " degrees ");





}
void index() {
  flexADC = analogRead(FLEX_I);
  flexV = flexADC * (VCC / 1023.0);
  flexR = R_DIV * (VCC / flexV - 1.0);

  //Serial.print("Resistance: " + String(flexR) + " ohms" );

  // Use the calculated resistance to estimate the sensor's
  // bend angle:
  I = map(flexR, STRAIGHT_RESISTANCE, BEND_RESISTANCE,
          0, 90.0);
 // Serial.print( " INDEXBend: " + String(I) + " degrees ");


}

void thumb() {
  flexADC = analogRead(FLEX_T);
  flexV = flexADC * (VCC / 1023.0);
  flexR = R_DIV * (VCC / flexV - 1.0);

  //Serial.print("Resistance: " + String(flexR) + " ohms" );

  // Use the calculated resistance to estimate the sensor's
  // bend angle:
  T = map(flexR, STRAIGHT_RESISTANCE, 55000.0, 0, 90.0);
 // Serial.print( " THUMBBend: " + String(T) + " degrees " );


}

void printfingers() { 
   Serial.print( "PINKYBend: " + String(angleP) + " degrees ");
   Serial.print( "RINGBend: " + String(angleR) + " degrees ");
  Serial.print( "MIDDLEBend: " + String(angleM) + " degrees ");
  Serial.print( "INDEXend: " + String(angleI) + " degrees ");
  Serial.print( "THUMBBend: " + String(angleT) + " degrees ");
  }

void checkLetter() {

  if (angleP > 60 && angleR > 60 &&  angleM > 60 && angleI > 60 && angleT < 60 && angleT > 30)
  {
    Serial.println("letter is a");
    BTserial.print("11");
    delay(1500);
  }

  if (angleP < 10 && angleP > -18 && angleR < 10 && angleR > -18 &&  angleM < 10 && angleM > -18 && angleI < 10 && angleI > -18 && angleT > 60)
  {
    Serial.println("letter is b");
    BTserial.print("12");
    delay(1500);
  }


  if (angleP > 30 && angleP < 60 && angleR > 30 && angleR < 60  && angleM > 30 && angleM < 60 && angleI > 30 && angleI < 60  && angleT > 30 && angleT < 70)
  {
    Serial.println("letter is c");
    BTserial.print("13");
    delay(1500);
  }


  if (angleP > 30 && angleP < 60 && angleR > 30 && angleR < 60 && angleM > 30 && angleM < 60 && angleI < 10 && angleI > -18 &&  angleT > 30 && angleT < 60)//con_state == (HIGH))
  {
    Serial.println("letter is d");
    BTserial.print("14");
    delay(1500);
  }


  if (angleP > 30 && angleP < 60 && angleR > 30 && angleR < 60 && angleM > 30 && angleM < 60 && angleI > 30 && angleI < 60 && angleT > 55)
  {
    Serial.println("letter is e");
    BTserial.print("15");
    delay(1500);
  }


  if ( angleP < 10 && angleP > -18 && angleR < 10 && angleR > -18 && angleM < 10 && angleM > -18 && angleI > 70 && angleT < 60 && angleT > 30)
  {
    Serial.println("letter is f");
    BTserial.print("16");
    delay(1500);
  }


  if ( angleP > 60 && angleR > 60  && angleM > 60 && angleI < 10 && angleI > -18 && angleT > 35)
  {
    Serial.println("letter is g");
    BTserial.print("17");
    delay(1500);
  }

  if (angleP > 60 && angleR > 60 && angleM < 10 && angleM > -18 && angleI < 10 && angleI > -18 && angleT > 25 && angleT < 60)
  {
    Serial.println("letter is h");
    BTserial.print("18");
    delay(1500);
  }

  if (angleP < 10 && angleP > -18 && angleR > 55 && angleM > 55 && angleI > 55 && angleT > 45)
  {
    Serial.println("letter is i");
    BTserial.print("19");
    delay(1500);
  }


  if (angleP > 60 && angleR < 10 && angleR > -18 && angleM < 10 && angleM > -18 && angleI < 10 && angleI > -18 && angleT < 10 && angleT > -18)
  {
    Serial.println("letter is j");
    BTserial.print("20");
    delay(1500);
  }


  if ( angleP > 60 && angleR > 60 && angleM > 30 && angleM < 60 && angleI < 20 && angleI > -18 && angleT > 30 && angleT < 60)
  {
    Serial.println("letter is k");
    BTserial.print("21");
    delay(1500);
  }


  if ( angleP > 60 && angleR > 60 && angleM > 60 && angleI < 10 && angleI > -18 && angleT < 10 && angleT > -18)

  {
    Serial.println("letter is l");
    BTserial.print("22");
    delay(1500);
  }


  if ( angleP > 60 && angleR > 30 && angleR < 60 && angleM > 30 && angleM < 60 && angleI > 60 && angleT > 60)
  {
    Serial.println("letter is m");
    BTserial.print("23");
    delay(1500);
  }


  if (angleP > 60 && angleR > 60 && angleM > 30 && angleM < 60 && angleI > 30 && angleI < 60 && angleT > 60)

  {
    Serial.println("letter is n");
    BTserial.print("24");
    delay(1500);
  }


  if (angleP > 30 && angleP < 60 && angleR > 30 && angleR < 60 && angleM > 30 && angleM < 60 && angleI > 30 && angleI < 60 && angleT > 20 && angleT < 60)
  {
    Serial.println("letter is o");
    BTserial.print("25");
    delay(1500);
  }

  if ( angleP > 60 && angleR > 60 && angleM > 30 && angleM < 60 && angleI < 10  && angleI > -18 && angleT > 10 && angleT < 30)

  {
    Serial.println("letter is p");
    BTserial.print("26");
    delay(1500);
  }


  if (angleP > 60 && angleR > 60 && angleM > 60 && angleI < 10 && angleI > -18 && angleT > 10 && angleT < 30)
  {
    Serial.println("letter is q");
    BTserial.print("27");
    delay(1500);
  }


  if ( angleP > 60 && angleR > 60 && angleM < 10 && angleM > -18 && angleI < 10 && angleI > -18 && angleT < 10 && angleT > -18)

  {
    Serial.println("letter is r");
    BTserial.print("28");
    delay(1500);
  }


  if ( angleP > 60 && angleR > 60 && angleM > 60 && angleI > 60 && angleT > 60)
  {
    Serial.println("letter is s");
    BTserial.print("29");
    delay(1500);
  }


  if ( angleP > 60 && angleR > 60 && angleM > 60 && angleI > 30 && angleI < 60 && angleT > 30 && angleT < 60)
  {
    Serial.println("letter is t");
    BTserial.print("30");
    delay(1500);
  }


  if (angleP > 60 && angleR > 60 && angleM < 10 &&  angleM > -18 && angleI < 10 && angleI > -18 && angleT > 60 && con_state == (HIGH))

  {
    Serial.println("letter is u");
    BTserial.print("31");
    delay(1500);
  }

  if (angleP > 60 && angleR > 60 && angleM < 10 &&  angleM > -18 && angleI < 10 && angleI > -18 && angleT > 60)
  {
    Serial.println("letter is v");
    BTserial.print("32");
    delay(1500);
  }

  if ( angleP > 60 && angleR < 10 && angleR > -18 && angleM < 10 && angleM > -18 && angleI < 10 && angleI > -18 && angleT > 50)

  {
    Serial.println("letter is w");
    BTserial.print("33");
    delay(1500);
  }

  if ( angleP > 60 && angleR > 60 && angleM > 60   && angleI > 30 && angleI < 60 && angleT > 60)
  {
    Serial.println("letter is x");
    BTserial.print("34");
    delay(1500);
  }


  if ( angleP < 10 && angleP > -18 && angleR > 60 && angleM > 60 && angleI > 60 && angleT > 30 && angleT < 60)
  {
    Serial.println("letter is y");
    BTserial.print("35");
    delay(1500);
  }


  if (angleP < 10 && angleP > -18 && angleR > 60 && angleM < 10 && angleM > -18 && angleI < 10 && angleI > -18 && angleT > 25)
  {
    Serial.println("letter is z");
    BTserial.print("36");
    delay(1500);
  }


  else {}

}


